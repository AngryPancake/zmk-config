/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick-tap-ms = <200>; };

/ {
    combos {
        compatible = "zmk,combos";

        game_mod_on {
            bindings = <&to 4>;
            key-positions = <6 5 39>;
            layers = <0>;
        };

        game_mod_off {
            bindings = <&to 0>;
            key-positions = <6 5 40>;
            layers = <4>;
        };

        Esc {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2>;
        };

        ins {
            bindings = <&kp INS>;
            key-positions = <7 20>;
        };

        Dot {
            bindings = <&kp RA(DOT)>;
            key-positions = <5 6>;
        };

        slash {
            bindings = <&kp RA(SLASH)>;
            key-positions = <6 19>;
        };

        less {
            bindings = <&tp_less>;
            key-positions = <4 16 23>;
        };

        grep {
            bindings = <&tp_grep>;
            key-positions = <19 5>;
        };
    };

    behaviors {
        tilde_tab: tilde_tab {
            compatible = "zmk,behavior-mod-morph";
            label = "TILDE_TAB";
            bindings = <&kp GRAVE>, <&kp TAB>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
            keep-mods = <(MOD_LALT|MOD_RALT)>;
        };

        L1_BSpace: L1_BSpace {
            compatible = "zmk,behavior-tap-dance";
            label = "L1_BSPACE";
            #binding-cells = <0>;
            bindings = <&lt 1 BACKSPACE>, <&kp BACKSPACE>;
        };

        test_behav: test_behav {
            compatible = "zmk,behavior-tap-dance";
            label = "TEST_BEHAV";
            #binding-cells = <0>;
            bindings = <&to_bt0>, <&bt BT_DISC 0>;

            tapping-term-ms = <3000>;
        };

        beh_ben_grep: beh_ben_grep {
            compatible = "zmk,behavior-send-string";
            label = "beh_bender_grep";
            #binding-cells = <0>;
            text = " grep -i 'error\|fatal\|warn\|stopped\|started\|gracefully' | less -S ";
        };

        beh_s_a: beh_s_a {
            compatible = "zmk,behavior-send-string";
            label = "beh_slack_a";
            #binding-cells = <0>;
            text = "..a";
        };
    };

    macros {
        slack_a: slack_a {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(DOT) &kp RA(DOT) &kp RA(A)>;
            label = "SLACK_A";
        };

        slack_c: slack_c {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(DOT) &kp RA(DOT) &kp RA(C) &kp SPACE>;
            label = "SLACK_C";
        };

        to_bt0: to_bt0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
            label = "TO_BT0";
        };

        to_bt1: to_bt1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
            label = "TO_BT1";
        };

        to_bt2: to_bt2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 2>;
            label = "TO_BT2";
        };

        slack_vc: slack_vc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(DOT) &kp RA(DOT) &kp RA(V) &kp RA(C) &kp RA(SPACE) &kp RA(D) &kp RA(O) &kp RA(N) &kp RA(E)>;
            label = "SLACK_VC";
        };

        slack_assignee: slack_assignee {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(DOT) &kp RA(DOT) &kp RA(A) &kp RA(S) &kp RA(S) &kp RA(I) &kp RA(G) &kp RA(N) &kp RA(E) &kp RA(E) &kp SPACE>;
            label = "SLACK_ASSIGNEE";
        };

        slack_inpro: slack_inpro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(DOT) &kp RA(DOT) &kp RA(I) &kp RA(N) &kp RA(UNDER) &kp RA(P) &kp RA(R) &kp RA(O) &kp RA(G) &kp RA(R) &kp RA(E) &kp RA(S) &kp RA(S)>;
            label = "SLACK_INPRO";
        };

        sudo_i: sudo_i {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(S) &kp RA(U) &kp RA(D) &kp RA(O) &kp SPACE &kp RA(MINUS) &kp RA(I) &kp RET>;
            label = "SUDO_I";
        };

        tp_less: tp_less {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(L) &kp RA(E) &kp RA(S) &kp RA(S) &kp SPACE>;
            label = "TP_LESS";
        };

        tp_grep: tp_grep {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp G &kp R &kp E &kp P &kp SPACE>;
            label = "TP_GREP";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  GUI |   ~  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  [   | GUI/] |
            //        | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |CTRL/'|
            //        | LALT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT |
            //                           | RSE | SPC | LWR |   | LWR | BKSP | RSE |

            bindings = <
&kp LWIN  &tilde_tab           &kp Q    &kp W    &lt 10 E          &kp R        &lt 7 T    &lt 8 Y          &lt 9 U          &kp I      &kp O    &kp P     &kp LBKT             &mt RWIN RBKT
          &kp LSHIFT           &lt 6 A  &lt 5 S  &mt LEFT_META D   &mt LSHFT F  &kp G      &lt 8 H          &lt 9 J          &kp K      &kp L    &kp SEMI  &mt RSHIFT SQT
          &mt LCTRL LG(SPACE)  &kp Z    &kp X    &kp C             &kp V        &kp B      &kp N            &kp M            &kp COMMA  &kp DOT  &kp FSLH  &mt RCTRL BACKSLASH
                                                 &mt LEFT_ALT TAB  &lt 2 SPACE  &lt 1 RET  &lt 1 BACKSPACE  &mt RSHFT SPACE  &lt 2 DEL
            >;

            label = "MAIN";
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |     |  _  |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  F9 | F10 | F11 | F12 |
            //       |  +  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  -  |
            //       |  =  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |     |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans      &mt EXCLAMATION N1  &mt AT_SIGN N2    &mt HASH N3      &mt DOLLAR N4            &mt PERCENT N5            &kp F1                   &kp F2   &kp F3     &kp F4  &kp F5   &trans      &trans
        &kp LSHIFT  &mt CARET N6        &mt AMPERSAND N7  &mt ASTERISK N8  &mt LEFT_PARENTHESIS N9  &mt RIGHT_PARENTHESIS N0  &kp F6                   &kp F7   &kp F8     &kp F9  &kp F10  &kp RSHIFT
        &kp LCTRL   &trans              &trans            &kp RA(DOT)      &mt UNDERSCORE MINUS     &mt PLUS EQUAL            &kp F11                  &kp F12  &trans     &trans  &trans   &kp RCTRL
                                                          &lt 3 TAB        &trans                   &trans                    &lt 1 LA(LC(BACKSPACE))  &trans   &lt 3 DEL
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |     | NMLK |  /  |  7  |  8  |  9  |  -  |   | VOLU| HOME| PRSC| PGUP| SCLK| CLCK|     |
            //       | CTRL |  *  |  4  |  5  |  6  |  +  |   | MUT | LEFT|  UP | RGHT| INS | APP |
            //       |      |  0  |  1  |  2  |  3  |  .  |   | VOLD| END | DOWN| PGDN| PAUS|     |
            //                          |     |     | ADJ |   | ADJ |     |     |

            bindings = <
&kp LA(TAB)  &kp BSPC   &kp DEL  &kp PG_UP  &kp UP    &kp PG_DN  &kp HOME   &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans  &trans  &trans  &trans  &kp LC(LA(BACKSPACE))
             &kp LSHFT  &trans   &kp LEFT   &kp DOWN  &kp RIGHT  &kp END    &kp C_VOL_DN          &kp C_VOL_UP          &trans  &trans  &trans  &trans
             &kp LCTRL  &trans   &trans     &trans    &trans     &trans     &trans                &trans                &trans  &trans  &trans  &trans
                                            &trans    &trans     &lt 3 RET  &lt 3 ESC             &trans                &trans
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            // | RST | BLDR |     |     |     |     |     |   |     |     |     |     |     | BLDR | RST |
            //       | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
            //       |      |     |     |     |     |     |   |     |     |     |     |     |      |
            //                          |     |     |     |   |     |     |     |

            bindings = <
&sys_reset  &bt BT_CLR    &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4   &none         &none         &none         &none         &none         &bootloader  &sys_reset
            &bootloader   &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
            &out OUT_USB  &out OUT_BLE   &to_bt0        &to_bt1        &to_bt2        &trans         &none         &none         &none         &none         &none         &none
                                                        &trans         &none          &trans         &trans        &none         &trans
            >;
        };

        game_layer {
            bindings = <
&gresc  &kp TAB     &kp Q  &kp W  &kp E     &kp R       &kp T      &trans  &trans    &kp UP    &trans     &trans  &trans  &kp LEFT_META
        &kp LSHIFT  &kp A  &kp S  &kp D     &kp F       &kp G      &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
        &kp LCTRL   &kp Z  &kp X  &kp C     &kp V       &kp B      &trans  &trans    &trans    &trans     &trans  &trans
                                  &kp LALT  &kp LSHIFT  &kp SPACE  &trans  &trans    &trans
            >;
        };

        S_layer {
            bindings = <
&trans  &none      &slack_vc  &trans  &trans    &kp RET  &trans           &trans  &trans  &trans  &trans  &trans  &trans  &trans
        &sudo_i    &slack_a   &trans  &trans    &trans   &slack_assignee  &trans  &trans  &trans  &trans  &trans  &trans
        &kp LC(A)  &trans     &trans  &slack_c  &trans   &slack_inpro     &trans  &trans  &trans  &trans  &trans  &trans
                                      &trans    &trans   &kp RET          &trans  &trans  &trans
            >;
        };

        A_layer {
            bindings = <
&trans  &trans     &trans  &trans     &trans       &kp RET      &kp LC(T)  &trans  &trans  &trans  &trans  &trans  &trans  &trans
        &trans     &trans  &trans     &trans       &kp LC(F)    &trans     &trans  &trans  &trans  &trans  &trans  &trans
        &kp LC(A)  &trans  &kp LC(X)  &kp LC(INS)  &kp LS(INS)  &trans     &trans  &trans  &trans  &trans  &trans  &trans
                                      &trans       &trans       &trans     &trans  &trans  &trans
            >;

            label = "A";
        };

        T_layer {
            bindings = <
&none  &none         &none    &none    &none    &none  &none  &none  &none  &none  &none  &none  &none  &none
       &none         &none    &none    &none    &none  &none  &none  &none  &none  &none  &none  &none
       &out OUT_USB  &to_bt0  &to_bt1  &to_bt2  &none  &none  &none  &none  &none  &none  &none  &none
                                       &none    &none  &none  &none  &none  &none
            >;
        };

        YHN_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp C_VOLUME_UP       &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp C_BRIGHTNESS_INC  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                &trans  &trans  &trans  &trans
                                &trans  &trans  &trans  &trans  &trans                &trans
            >;

            label = "YHN";
        };

        UJM_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp C_VOL_DN   &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans  &trans  &kp C_BRI_DEC  &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans  &trans  &trans         &trans  &trans  &trans  &trans  &trans
                                &trans  &trans  &trans  &trans         &trans  &trans
            >;

            label = "UJM";
        };

        E_layer {
            bindings = <
&trans  &trans  &trans  &kp LC(PG_UP)       &trans  &kp LC(PG_DN)  &kp LC(T)  &trans  &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &kp LA(LEFT_ARROW)  &trans  &kp LA(RIGHT)  &kp LC(R)  &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans              &trans  &kp LC(W)      &kp LC(W)  &trans  &trans  &trans  &trans  &trans  &trans
                                            &trans  &trans         &kp RET    &trans  &trans  &trans
            >;
        };
    };
};
